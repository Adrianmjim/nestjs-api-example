name: CI

on:
  pull_request:
    branches: 
      - '*'
    paths:
      - 'package.json'
      - 'turbo.json'
      - 'packages/**/*.ts'
      - 'packages/**/package.json'
      - '.github/workflows/*'
    
jobs: 
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: package.json
      
      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

  format:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: package.json
      
      - name: Install dependencies
        run: pnpm install

      - name: Check Format
        run: pnpm format:check

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: package.json
      
      - name: Install dependencies
        run: pnpm install

      - name: Check Linter
        run: pnpm lint

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
    
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: package.json
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Check Tests
        run: pnpm test:js:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-docker-images:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: adrianmjim/nestjs-api-example
          tags: |
            type=semver,pattern={{version}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: adrianmjim
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}